using System;
using System.Collections.Generic;
using System.Text;

namespace PUB_ZIK
{
    // Обработка одного вида налога
    class NalogFOP
    {
        public static bool ИспользоватьРезервОтпусков = false;  //По умолчанию не используем 
        decimal ВерхнийПредел;                                  //Верхний предел
        decimal ВсегоНачислено;                                 //Всех начислений из которые обкладываются даным налогом
        decimal ВсегоОтпускных;                                 //Отпуск
        DateTime ПереиодРасчёта;                                //дата начала периода из периода расчёта 
        public НалогНаФОП НалогНаФОП;                           //Ссылка на описатель налога 


        public NalogFOP(НалогНаФОП НалогНаФОП, DateTime Period)
        {
            this.НалогНаФОП = НалогНаФОП;
            this.ПереиодРасчёта = Period;
            ВсегоНачислено = 0;
            ВсегоОтпускных = 0;
            ВерхнийПредел = НалогНаФОП.Predel(Period);
        }
        
        
        decimal Procent
        {
            get { return НалогНаФОП.Procent(); }
        }
        // Додати сумму до бази налога
        public void Add(decimal rez, bool ЭтоОтпуск)
        {
            ВсегоНачислено = ВсегоНачислено + rez;
            if (ЭтоОтпуск)
                ВсегоОтпускных = ВсегоОтпускных + rez;
        }
        // Податок
        public decimal Налог
        {
            get
            {
                if (ИспользоватьРезервОтпусков)
                {
                    decimal налог = decimal.Round((ВсегоНачислено > ВерхнийПредел ? ВерхнийПредел : ВсегоНачислено) * Procent, 2) - Налог_с_Отпуска;
                    return налог > 0 ? налог : 0;
                }
                else
                {
                    return decimal.Round((ВсегоНачислено > ВерхнийПредел ? ВерхнийПредел : ВсегоНачислено) * Procent, 2);
                }
            }
        }
        // Податок з відпускних
        public decimal Налог_с_Отпуска
        {
            get
            {
                if (ИспользоватьРезервОтпусков)
                {
                    return decimal.Round((ВсегоОтпускных > ВерхнийПредел ? ВерхнийПредел : ВсегоОтпускных)* Procent, 2);
                } else return 0;
            }
        }


    }
}
